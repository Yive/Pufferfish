From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Paul <paul@technove.co>
Date: Fri, 2 Jul 2021 18:27:12 -0500
Subject: [PATCH] Remove lambda from ticking guard


diff --git a/net/minecraft/server/level/ServerLevel.java b/net/minecraft/server/level/ServerLevel.java
index 31d0d2162b053d5aadd5f958cd67ee364e950ced..fdcfd05c3f9b1efffa5166573af8ae18e5eca1dc 100644
--- a/net/minecraft/server/level/ServerLevel.java
+++ b/net/minecraft/server/level/ServerLevel.java
@@ -815,7 +815,19 @@ public class ServerLevel extends Level implements ServerEntityGetter, WorldGenLe
                                     }
 
                                     profilerFiller.push("tick");
-                                    this.guardEntityTick(this::tickNonPassenger, entity);
+                                    // Pufferfish start - copied from this.guardEntityTick
+                                    try {
+                                        this.tickNonPassenger(entity); // Pufferfish - changed
+                                    } catch (Throwable var6) {
+                                        // Paper start - Prevent block entity and entity crashes
+                                        final String msg = String.format("Entity threw exception at %s:%s,%s,%s", entity.level().getWorld().getName(), entity.getX(), entity.getY(), entity.getZ());
+                                        MinecraftServer.LOGGER.error(msg, var6);
+                                        getCraftServer().getPluginManager().callEvent(new com.destroystokyo.paper.event.server.ServerExceptionEvent(new com.destroystokyo.paper.exception.ServerInternalException(msg, var6))); // Paper - ServerExceptionEvent
+                                        entity.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.DISCARD);
+                                        // Paper end - Prevent block entity and entity crashes
+                                    }
+                                    this.moonrise$midTickTasks(); // Paper - rewrite chunk system
+                                    // Pufferfish end
                                     profilerFiller.pop();
                                 }
                             }
diff --git a/net/minecraft/world/level/Level.java b/net/minecraft/world/level/Level.java
index 2bbebb4335d927f240abcac67a5b423e38dc33d7..a0ebc8c9c70fbc7b6159a9ed7a192db8e27cd196 100644
--- a/net/minecraft/world/level/Level.java
+++ b/net/minecraft/world/level/Level.java
@@ -1497,15 +1497,15 @@ public abstract class Level implements LevelAccessor, AutoCloseable, ca.spottedl
     public <T extends Entity> void guardEntityTick(Consumer<T> consumerEntity, T entity) {
         try {
             consumerEntity.accept(entity);
-        } catch (Throwable var6) {
+        } catch (Throwable var6) { // Pufferfish - diff on change ServerLevel.tick
             // Paper start - Prevent block entity and entity crashes
             final String msg = String.format("Entity threw exception at %s:%s,%s,%s", entity.level().getWorld().getName(), entity.getX(), entity.getY(), entity.getZ());
             MinecraftServer.LOGGER.error(msg, var6);
             getCraftServer().getPluginManager().callEvent(new com.destroystokyo.paper.event.server.ServerExceptionEvent(new com.destroystokyo.paper.exception.ServerInternalException(msg, var6))); // Paper - ServerExceptionEvent
-            entity.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.DISCARD);
+            entity.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.DISCARD); // Pufferfish - diff on change ServerLevel.tick
             // Paper end - Prevent block entity and entity crashes
         }
-        this.moonrise$midTickTasks(); // Paper - rewrite chunk system
+        this.moonrise$midTickTasks(); // Paper - rewrite chunk system // Pufferfish - diff on change ServerLevel.tick
     }
 
     // Paper start - Option to prevent armor stands from doing entity lookups
